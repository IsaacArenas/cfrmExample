AWSTemplateFormatVersion: "2010-09-09"
# Parameters Works as a based of inputs or SetUp to be use around the Tempalte
Parameters:
  apiName:
    Type: String
    Description: "name of the api tbd"
  route53Domainurl:
    Type: String
    Description: "Domain URL to deploy this"
  
Resources: 
  # Dynamo DB Table
  dynamoTable:
    Type: AWS::DynamoDB::Table
    Properties: 
      TableName: !Sub "${apiName}-table"
      AttributeDefinitions: 
        - AttributeName: "Type"
          AttributeType: "S"
        - AttributeName: "Property"
          AttributeType: "S"
      KeySchema: 
        - AttributeName: "Type"
          KeyType: "HASH"
        - AttributeName: "Property"
          KeyType: "RANGE"
      ProvisionedThroughput: 
        ReadCapacityUnits: "5"
        WriteCapacityUnits: "5"
  #Lambda Role 
  lambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Handler: getItems.lambda_handler
      Role: !Ref LambdaRole
      Code:
        S3Bucket: laloteriaisaac
        S3Key: api.zip
      Runtime: Python 3.9
      Timeout: 5
      TracingConfig:
        Mode: Active
      Environment:
        Variables:
          dynaTable: !Ref dynamoTable
    DependsOn:
      - dynamoTable
      - LambdaRole

   
  # IAM role for access control 
  LambdaRole: 
    Type: "AWS::IAM::Role"
    Properties:
      RoleName : !Sub "${apiName}-role"
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - Effect: "Allow"
            Principal: 
              Service: 
                - "lambda.amazonaws.com"
            Action: 
              - "sts:AssumeRole"
  # Policy For Lambda to be able to read the Specific Dyamo Table
  lambdaDynamoDBPolicy: 
    Type: "AWS::IAM::Policy"
    Properties: 
      PolicyName: !Sub "${apiName}-dynamoDBAccess"
      PolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - Effect: "Allow"
            Action: 
              - "dynamodb:PutItem"
              - "dynamodb:DeleteItem"
              - "dynamodb:GetItem"
              - "dynamodb:Scan"
              - "dynamodb:Query"
              - "dynamodb:UpdateItem"
              - "dynamodb:UpdateTable"
              - "dynamodb:GetRecords"
            Resource:
              - !Sub "arn:aws:dynamodb:*:*:table/${apiName}-table"
              - "arn:aws:dynamodb:*:*:table/*/stream/*"
              - "arn:aws:dynamodb:*:*:table/*/index/*"
          - Effect: "Allow"
            Action: 
              - "dynamodb:ListGlobalTables"
              - "dynamodb:ListTables"
            Resource: "*"
      Roles: 
        - Ref: "LambdaRole"

        
